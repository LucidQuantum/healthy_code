{"mappings":"AAAA,EAAY,AAAZ,4BAA8B;AACZ,GAAf,CAAC,IAAI,GAAG,CAAC;IACR,EAAO,AAAP,aAAe;IACP,OAAD,EAAE,CAAC;QACN,KAAK,EAAE,CAAE;QACT,UAAU,EAAE,KAAK;IACrB,CAAC;IACD,SAAS,EAAE,CAAC;QACR,KAAK,EAAE,CAAE;QACT,UAAU,EAAE,KAAK;IACrB,CAAC;IACD,UAAU,EAAE,CAAC;QACT,KAAK,EAAE,CAAE;QACT,UAAU,EAAE,KAAK;IACrB,CAAC;IACD,EAAO,AAAP,aAAe;IACP,YAAI,EAAE,CAAC;QACX,KAAK,EAAE,IAAI;QACX,UAAU,EAAE,KAAK;IACrB,CAAC;IACD,WAAW,EAAE,CAAC;QACV,KAAK,EAAE,IAAI;QACX,UAAU,EAAE,KAAK;IACrB,CAAC;IACD,UAAU,EAAE,CAAC;QACT,KAAK,EAAE,IAAI;QACX,UAAU,EAAE,IAAI;IACpB,CAAC;AACL,CAAC;AAED,EAAY,AAAZ,gBAAkB;AACZ,KAAD,CAAC,gBAAgB,IAAI,KAAK,GAAK,CAAC;IACjC,EAAO,AAAP,aAAe;IACP,GAAL,CAAC,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,KAAK;IAC3C,YAAY,GAAG,OAAO,CAAC,KAAK;IAE5B,EAAU,AAAV,sBAAwB;IACV,IAAV,CAAC,KAAK,EAAE,CAAO,UAAI,YAAY;IACnC,eAAe,CAAC,KAAK;IAErB,EAAU,AAAV,sBAAwB;IACV,mBAAK;AACvB,CAAC;AAED,KAAK,CAAC,eAAe,IAAI,KAAK,GAAK,CAAC;IAChC,EAAO,AAAP,aAAe;IACP,GAAL,CAAC,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,KAAK;IAE3C,EAAO,AAAP,aAAe;IACP,GAAL,CAAC,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;IAChC,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,UAAU;IAC3B,MAAM,CAAC,aAAa,CAAC,UAAU;IAE/B,EAAc,AAAd,kCAAoC;IACd,MAAhB,CAAC,MAAM,GAAG,QAAQ,GAAI,CAAC;QACzB,EAAO,AAAP,aAAe;QACP,cAAM,CAAC,KAAK,EAAE,UAAU;QAEhC,EAAgB,AAAhB,gCAAkC;QAChB,UAAR,GAAG,MAAM,CAAC,MAAM;QAC1B,IAAI,CAAC,KAAK,EAAE,CAAO,UAAI,UAAU;QAEjC,EAAc,AAAd,8BAAgC;QACd,GAAf,CAAC,aAAa,GAAG,QAAQ,CAAC,cAAc,IAAI,KAAK,CAAC,MAAM;QAC3D,aAAa,CAAC,GAAG,GAAG,UAAU;QAE9B,EAAU,AAAV,sBAAwB;QACV,mBAAK;IACvB,CAAC;AACL,CAAC;AAED,KAAK,CAAC,WAAW,OAAS,CAAC;IACvB,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ;IAC7B,GAAG,CAAC,GAAG,GAAG,CAA8B;IAExC,EAAsD,AAAtD,oDAAsD;IACtD,QAAQ,CAAC,MAAM,CAAC,CAAO,QAAE,CAAG;IAC5B,QAAQ,CAAC,MAAM,CAAC,CAAU,WAAE,IAAI,CAAC,CAAW,YAAE,CAAO;IACrD,QAAQ,CAAC,MAAM,CAAC,CAAQ,SAAE,IAAI,CAAC,CAAY,aAAE,CAAO;IACpD,QAAQ,CAAC,MAAM,CAAC,CAAS,UAAE,IAAI,CAAC,CAAc,eAAE,CAAO;IACvD,QAAQ,CAAC,MAAM,CAAC,CAAa,cAAE,IAAI,CAAC,CAAa,cAAE,CAAO;IAC1D,QAAQ,CAAC,MAAM,CAAC,CAAU,WAAE,IAAI,CAAC,CAAY,aAAE,CAAO;IAEtD,KAAK,CAAC,GAAG,EAAE,CAAC;QACR,MAAM,EAAE,CAAM;QACd,IAAI,EAAE,QAAQ;IAClB,CAAC,EACI,IAAI,EAAE,QAAQ,GAAK,OAAO,CAAC,GAAG,CAAC,QAAQ;MACvC,IAAI,EAAE,KAAI,GAAK,CAAC;QACb,OAAO,CAAC,GAAG,CAAC,CAAU,WAAE,KAAI;IAChC,CAAC,EACA,KAAK,EAAE,KAAK,GAAK,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,CAAQ,SAAE,KAAK;IACjC,CAAC;AAEL,EAA0B,AAA1B,wBAA0B;AAE1B,EAAoC,AAApC,kCAAoC;AACpC,EAA2B,AAA3B,yBAA2B;AAC3B,EAAiB,AAAjB,yCAA2C;AACjB,EAArB,AAAL,GAAK;AACL,EAAoB,AAApB,gCAAkC;AACxB,CAAb;AAED,EAAkB,AAAlB,gBAAkB;AAClB,KAAK,CAAC,iBAAiB,IAAI,KAAK,EAAE,IAAI,EAAE,MAAM,GAAK,CAAC;IAChD,GAAG,CAAC,KAAK,GAAG,MAAM,IAAI,IAAI,GAAG,CAAO,SAAG,CAAK;IAE5C,EAAO,AAAP,SAAW;IACP,GAAD,CAAC,aAAa,GAAG,QAAQ,CAAC,cAAc,IAAI,KAAK,CAAC,MAAM;IAC3D,aAAa,CAAC,SAAS,GAAG,IAAI;IAC9B,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK;IACjC,GAAG,CAAC,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,KAAK;IACjD,aAAa,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK;IAEvC,EAAO,AAAP,aAAe;IACP,IAAJ,CAAC,KAAK,EAAE,CAAY,eAAI,MAAM;AACtC,CAAC;AAED,EAA2B,AAA3B,qEAAuE;AAC3B,KAAvC,CAAC,eAAe,IAAI,KAAK,GAAK,CAAC;IAChC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAO;IAE3B,MAAM,CAAE,KAAK;QACT,IAAI,CAAC,CAAW;YACZ,EAAE,EAAE,KAAK,IAAI,CAAE,GACX,iBAAiB,CAAC,KAAK,EAAE,CAAS,sBAAc,KAAK;iBACtC,EAAV,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,EACvB,iBAAiB,CAAC,KAAK,EAAE,CAAa,gCAAoB,KAAK;iBAC1C,EAAhB,EAAE,KAAK,CAAC,MAAM,IAAI,CAAC,EACxB,iBAAiB,CAAC,KAAK,EAAE,CAAY,6BAAkB,KAAK;iBAE5C,iBAAC,CAAC,KAAK,EAAE,CAAY,+BAAoB,IAAI;YAE/C,KAAb;QACT,IAAI,CAAC,CAAY;YACb,EAAE,EAAE,KAAK,CAAC,CAAC,KAAK,CAAG,IACf,iBAAiB,CAAC,KAAK,EAAE,CAAa,gCAAoB,KAAK;iBAC1C,EAAhB,EAAE,KAAK,CAAC,MAAM,GAAG,EAAE,EACxB,iBAAiB,CAAC,KAAK,EAAE,CAAW,4BAAkB,KAAK;iBACxC,EAAd,EAAE,KAAK,CAAC,MAAM,GAAG,EAAE,EACxB,iBAAiB,CAAC,KAAK,EAAE,CAAW,4BAAkB,KAAK;iBAE3C,iBAAC,CAAC,KAAK,EAAE,CAAa,kCAAsB,IAAI;YAEhD,KAAf;;AAEjB,CAAC;AAED,KAAK,CAAC,cAAc,IAAI,KAAK,EAAE,IAAI,GAAK,CAAC;IACrC,QAAQ,GAAG,OAAe;IAC1B,MAAM,CAAE,KAAK;QACT,IAAI,CAAC,CAAc;YACf,EAAE,EAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,EACpB,iBAAiB,CAAC,KAAK,EAAE,CAAe,kCAAoB,KAAK;iBAE/C,iBAAD,CAAC,KAAK,EAAE,CAAW,4BAAkB,IAAI;YAE9C,KAAX;QACT,IAAI,CAAC,CAAa;YACd,EAAE,EAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,EACpB,iBAAiB,CAAC,KAAK,EAAE,CAAe,kCAAoB,KAAK;iBAE/C,iBAAD,CAAC,KAAK,EAAE,CAAW,4BAAkB,IAAI;YAE9C,KAAX;QACT,IAAI,CAAC,CAAkB;YACnB,EAAE,EAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,EACpB,iBAAiB,CAAC,KAAK,EAAE,CAAe,kCAAoB,KAAK;iBAE/C,iBAAD,CAAC,KAAK,EAAE,CAAY,+BAAoB,IAAI;YAE/C,KAAb;;AAEjB,CAAC;AAED,KAAK,CAAC,mBAAmB,OAAS,CAAC;IAC/B,OAAO,CAAC,GAAG,CAAC,IAAI;IAEhB,gBAAgB,GAAG,IAAI;IACvB,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAe;IAExD,GAAG,CAAE,GAAG,CAAC,KAAK,IAAI,IAAI,CAClB,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,CAAY,gBAAK,KAAK,EAClC,gBAAgB,GAAG,KAAK;IAGhC,EAAG,AAAH,CAAG;IACH,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAO;IAC/C,EAAE,GAAG,aAAa,CAAC,OAAO,EACtB,gBAAgB,GAAG,KAAK;IAE5B,EAAE,EAAE,gBAAgB,IAAI,IAAI,EAAE,CAAC;QAC3B,cAAc,CAAC,QAAQ,GAAG,KAAK;QAC/B,cAAc,CAAC,SAAS,GAAG,CAAM;IAC7B,CAAP,MAAM,CAAC;QACJ,cAAc,CAAC,QAAQ,GAAG,IAAI;QAC9B,cAAc,CAAC,SAAS,GAAG,CAAU;IACzB,CAAf;AACL,CAAC;AAED,EAAQ,AAAR,gBAAkB;AACR,gBAAM,CAAC,CAAS;AAC1B,iBAAiB,CAAC,CAAS,UAAE,CAAY,+BAAoB,IAAI;AAC/C,iBAAD,CAAC,CAAY,aAAE,CAAuB,wDAAE,IAAI","sources":["script.js"],"sourcesContent":["// 读取所有需要的数据\nlet data = {\n    // 文字内容\n    project: {\n        value: '',\n        validation: false,\n    },\n    user_name: {\n        value: '',\n        validation: false,\n    },\n    user_phone: {\n        value: '',\n        validation: false,\n    },\n    // 图片内容\n    healthy_code: {\n        value: null,\n        validation: false,\n    },\n    travel_code: {\n        value: null,\n        validation: false,\n    },\n    covid_test: {\n        value: null,\n        validation: true,\n    },\n};\n\n// 获取string值\nconst get_string_input = (field) => {\n    // 定位元素\n    let element = document.getElementById(field);\n    string_value = element.value;\n\n    // 获取数值并验证\n    data[field]['value'] = string_value;\n    validate_string(field);\n\n    // 检测是否能提交\n    validate_all_fields();\n};\n\nconst get_image_input = (field) => {\n    // 定位元素\n    let element = document.getElementById(field);\n\n    // 读取图片\n    let image_file = element.files[0];\n    let reader = new FileReader();\n    reader.readAsDataURL(image_file);\n\n    // 读取完成后，验证并储存\n    reader.onload = function () {\n        // 验证图片\n        validate_image(field, image_file);\n\n        // 将图片数据存储到data中\n        image_data = reader.result;\n        data[field]['value'] = image_file;\n\n        // 更新UI，显示当前图片\n        let image_element = document.getElementById(`${field}_image`);\n        image_element.src = image_data;\n\n        // 检测是否能提交\n        validate_all_fields();\n    };\n};\n\nconst submit_data = () => {\n    const formData = new FormData();\n    let url = 'http://127.0.0.1:1234/submit';\n\n    // formData.append('batch', data['project']['value']);\n    formData.append('batch', '1');\n    formData.append('username', data['user_name']['value']);\n    formData.append('mobile', data['user_phone']['value']);\n    formData.append('qr_code', data['healthy_code']['value']);\n    formData.append('travel_code', data['travel_code']['value']);\n    formData.append('check_up', data['covid_test']['value']);\n\n    fetch(url, {\n        method: 'POST',\n        body: formData,\n    })\n        .then((response) => console.log(response))\n        .then((data) => {\n            console.log('Success:', data);\n        })\n        .catch((error) => {\n            console.error('Error:', error);\n        });\n\n    // http.send(concat_data);\n\n    // http.onload = function (result) {\n    //     console.log(result);\n    // 请求结束后,在此处写处理代码\n    // };\n    // alert('数据提交成功！');\n};\n\n// Helper Function\nconst change_validation = (field, text, result) => {\n    let color = result == true ? 'green' : 'red';\n\n    // 改变UI\n    let label_element = document.getElementById(`${field}_label`);\n    label_element.innerText = text;\n    label_element.style.color = color;\n    let input_element = document.getElementById(field);\n    input_element.style.borderColor = color;\n\n    // 改变数据\n    data[field]['validation'] = result;\n};\n\n// 验证数据是否合法，验证完之后会在UI界面体现出来\nconst validate_string = (field) => {\n    value = data[field]['value'];\n\n    switch (field) {\n        case 'user_name':\n            if (value == '') {\n                change_validation(field, '2、请输入姓名', false);\n            } else if (value.length > 6) {\n                change_validation(field, '2、姓名不能超过6个字', false);\n            } else if (value.length == 1) {\n                change_validation(field, '2、姓名至少为2个字', false);\n            } else {\n                change_validation(field, '2、姓名（通过验证）', true);\n            }\n            break;\n        case 'user_phone':\n            if (value[0] != '1') {\n                change_validation(field, '3、手机号必须以1开头', false);\n            } else if (value.length < 11) {\n                change_validation(field, '3、手机号长度太短', false);\n            } else if (value.length > 11) {\n                change_validation(field, '3、手机号长度太长', false);\n            } else {\n                change_validation(field, '3、手机号（通过验证）', true);\n            }\n            break;\n    }\n};\n\nconst validate_image = (field, file) => {\n    max_size = 5 * 1000 * 1024;\n    switch (field) {\n        case 'healthy_code':\n            if (file.size > max_size) {\n                change_validation(field, '4、图片大小不能超过5MB', false);\n            } else {\n                change_validation(field, '4、健康码（通过）', true);\n            }\n            break;\n        case 'travel_code':\n            if (file.size > max_size) {\n                change_validation(field, '5、图片大小不能超过5MB', false);\n            } else {\n                change_validation(field, '5、行程码（通过）', true);\n            }\n            break;\n        case 'covid_test_label':\n            if (file.size > max_size) {\n                change_validation(field, '6、图片大小不能超过5MB', false);\n            } else {\n                change_validation(field, '6、核酸检测（通过）', true);\n            }\n            break;\n    }\n};\n\nconst validate_all_fields = () => {\n    console.log(data);\n\n    final_validation = true;\n    button_element = document.getElementById('submit_button');\n\n    for (let field in data) {\n        if (data[field]['validation'] == false) {\n            final_validation = false;\n        }\n    }\n    // \n    check_element = document.getElementById('check');\n    if (!check_element.checked) {\n        final_validation = false;\n    }\n    if (final_validation == true) {\n        button_element.disabled = false;\n        button_element.innerText = '提交数据';\n    } else {\n        button_element.disabled = true;\n        button_element.innerText = '请填写所有必须项';\n    }\n};\n\n// 数据初始化\nget_string_input('project');\nchange_validation('project', '1、选择场次（通过）', true);\nchange_validation('covid_test', '6、(可选)上传48小时内【核酸检测】截图', true);\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}